<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ratchet]]></title>
    <url>%2F2018%2F12%2F23%2Fratchet%2F</url>
    <content type="text"><![CDATA[首先在本地搭建好chat_client,chat_server, chat_website 然后因为mysql5.7以上date类型不再支持0000-00-00的格式,所以在执行导入sql文件后,进入msql控制台,执行如下语句 1set GLOBAL sql_mode =''; 为了方便调试可以在chat_website上进行相应的调试 如果本地测试需要直接回复信息,可去掉发信息的条件限制,在 chatserver/app/models/ChatUser.php的canSendMessage方法中直接返回 1return true; 在chat_website上本地测试 (1)更改chat_website/index.php 约131行: 1echo "&lt;script&gt;location.href = '/';&lt;/script&gt; (2)注释chat_website/index.php 约65,66行 并且复制一条新的chatJsUrl 更换成自己本地搭建chatclient的虚拟域名地址如下: 1var chatJsUrl = "http://chatsmall.com/js/"; //curry (3)更改chat_client端代码chat_small/js/client.chat.main.js 18,19行注释掉 并去掉21,22行的注释,也就是将serverclient的本机虚拟域名替换,并且为了纠正路径问题,要去掉该文件中所有的chat_client路径 1var chatIP = "chatsmall.com"; // Test 1var chatUrl = "http://" + chatIP; // Test (4)更改chat_client端代码chat_small/index.php并且修改242行的chatIP为自己本机ip并且修改244行apiUrl为自己本地的chatserver的虚拟域名 1var chatIP = "127.0.0.1"; // Test 1var apiUrl = "http://chatserver.com"; // Test (5)更改chat_client端代码chat_small/js/scripts.js的115行注释掉 并且取消116行的注释 1//webSocket = new WebSocket("wss://" + chatIP + "/wss"); // Live 1webSocket = new WebSocket("ws://" + chatIP + ":" + port); // Test]]></content>
      <tags>
        <tag>websockets</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F20%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
