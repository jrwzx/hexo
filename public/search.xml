<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[docker for windows]]></title>
    <url>%2F2020%2F06%2F17%2Fdocker_for_windows%2F</url>
    <content type="text"><![CDATA[前提环境win7系统,linux下的安装就不说了,几条命令就ok了,相对比较麻烦的就是win下的环境,总的来说会出现以下集中情况: 第一种情况: 首先是提示default Boot2Docker ISO is out-of-date,主要告诉我们在C:\Users\jr.docker\machine\cache(jr是我本机名字,实际情况已自己为准)下的boot2docker.iso文件不是最新的,所以会去下载最新的iso文件,但是网上有的说可以先关闭网络然后再安装,就不会检测版本,个人建议还是不要这样做,后期因为不是最新的有可能虚拟机出问题,到时候导致docker出现问题,所以直接去github下载最新的iso即可,所有的版本在这里(最好自己有vpn) https://github.com/boot2docker/boot2docker/releases 第二种情况: 如下所示,当走过第一个坑的时候,第二个坑又来了,启动docker terminal的时候,就会出现下面问题,总之就是告诉你当前你自己用的这台电脑没有开启cpu虚拟机化,so直接重启机器进入BIOS,主要找到config &gt; virtualization Technology &gt; 设置成Enabled然后重启机器就全部完事了 12Error creating machine : Error in driver during machine creation. This computer doesn't have VT-X/AMD enabled. Enabling it in the BIOS is mandatory]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[apache403]]></title>
    <url>%2F2019%2F03%2F16%2Fapache403%2F</url>
    <content type="text"><![CDATA[最近因为要玩docker因为之前的系统是centos 6.5 ，所以换了一个新的7.6 centos版本的, 然后发现centos7.6 安装vm-tools 和6.x 并 不一样,因为在apache用的ln-s 形式访问的站点(这里用了共享hgfs的文件)导致各种403, 起初一般都是vhost或者httpd.conf少了一些配置,但 是该加的都加了还是403,最后排除法我创建了一个dir就可以访问,ln就不行了,然后试着更改 /mnt/hgfs 但是发现被 not permission ,然后觉 得是这里问题,原来centos7 vmtools 启动时候要加allow_other 选项, 如果不加, 系统其它的用户就不能访问该文件夹里的问价,所以就会出现 我之前apache遇到的403 forbidden…………….. 所以在这里提醒大家只要是centos 7.x vmtools和windows 共享文件开发时候,一定要加如下, 1sudo vmhgfs-fuse .host:/ /mnt/hgfs -o allow_other 运行以上,如果之前开启没有加allow_other,就会hgfs访问不了 会提示如下 12fuse: mountpoint is not emptyfuse: if you are sure this is safe, use the 'nonempty' mount option 然后直接加进去 nonempty 1sudo vmhgfs-fuse .host:/ /mnt/hgfs -o nonempty -o allow_other 最后来一句,就是403很多,大都很常见,这个情况比较少见…比较恶心]]></content>
      <tags>
        <tag>apache</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vm_share]]></title>
    <url>%2F2019%2F01%2F28%2Fvm-share%2F</url>
    <content type="text"><![CDATA[命令行安装Vmware Tools 本机虚拟机共享文件,在VMware点击VM,在单击”install VMware Tools…” 输入ls /dev查看 1ls /dev mkdir /mnt/cdrom 在/mnt目录下新建一个名为cdrom的文件夹 1mkdir /mnt/cdrom mount -t iso9660 /dev/cdrom /mnt/cdrom 将光盘挂载到/mnt/cdrom目录下 1mount -t iso9660 /dev/cdrom /mnt/cdrom ls /mnt/cdrom/查看内容，再执行 cp /mnt/cdrom/VMwareTools-9.2.0-799703.tar.gz /root/vm.tar.gz,将名为“VMwareTools-9.2.0-799703.tar.gz”复制到/root目录下，并重新命名为vm.tar.gz 12ls /mnt/cdrom/cp /mnt/cdrom/VMwareTools-9.2.0-799703.tar.gz /root/vm.tar.gz 然后解压第5步里的文件tar -xzf vm.tar.gz 1tar -zxvf vm.tar.gz cd vmware-tools-distrib/，输入./vmware-install.pl安装，若出现错误-bash: ./vmware-install.pl: /usr/bin/per: bad interpreter: No such file or directory，表明未安装编译环境 1./vmware-install.pl 若第7步报错,则安装编译环境 yum -y install perl gcc make kernel-headers kernel-devel 1yum -y install perl gcc make kernel-headers kernel-devel 第八步编译安装成功,再重新安装./vmware-install.pl 1./vmware-install.pl VMware Tools已经安装完毕，提示可以运行/usr/bin/vmware-uninstall-tools.pl命令卸载VMware Tools。第一次运行时需运行/usr/bin/vmware-config-tools.pl命令配置VMware Tools，按回车键直接运行。需要注意的是,如果卸载命令不起作用,可执行rpm -e open-vm-tools-desktop 卸载并且重新安装 以上都执行完毕可能会出现问题,报错如下(含解决方法) Do you want to enable Guest Authentication (vgauth)? [yes]No X install found.Creating a new initrd boot image for the kernel.vmware-tools-thinprint start/runninginitctl: Job failed to startUnable to start services for VMware Tools 要把这个conf文件删掉 1rm /etc/init/vmware-tools-thinprint.conf 再重启vmware-tools的服务即可 1/etc/vmware-tools/services.sh start 如果在这之后出现 blocking file system failed 报错信息,则yum install fuse-libs 命令来解决 1yum install fuse-libs 如果在这之后出现 Mounting HGFS shares: FAILED. 报错信息,因为虚拟机设置中没有启用共享文件夹功能,启用就好]]></content>
      <tags>
        <tag>vm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nginx_faild3]]></title>
    <url>%2F2019%2F01%2F26%2Fnginx-faild3%2F</url>
    <content type="text"><![CDATA[nginx有的时候启动会报错nginx: [alert] kill(1022, 1) failed (3: No such process)问题的解决: 首先出现这种报错时候,正常的启动nginx依然会报这种错误,所以可以用 -c 方式指定nginx配置文件来启动从而解决该问题,格式如下: 启动代码格式：nginx安装目录地址 -c nginx配置文件地址 1[root@192 sbin]# /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf]]></content>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[stored procedure]]></title>
    <url>%2F2019%2F01%2F03%2Fstored-procedure%2F</url>
    <content type="text"><![CDATA[下面是之前写的支付流程的存储过程,通过触发器来触发的,注释部分用到的是cursor,cursor这个东西不错,简单来说就是可以通过将查询结果赋值给一个变量 ，然后在另一个sql中去引用这个变量,其实个人觉得最好不要: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657beginDECLARE currentTime INT DEFAULT UNIX_TIMESTAMP();DECLARE update_count INT DEFAULT 0;DECLARE update_members INT DEFAULT 0;DECLARE _event_id INT DEFAULT 0;DECLARE _event_coin INT DEFAULT 0;DECLARE _event_rebate INT DEFAULT 0;DECLARE _user_coin DECIMAL(10,3);DECLARE info_str VARCHAR(255);DECLARE no_more_record INT DEFAULT 0;#declare cur_yb cursor for#SELECT id, coin, rebate FROM blast_events_fanxian WHERE `coin` &lt;= _rechargeAmount order by coin desc LIMIT 1;#DECLARE CONTINUE HANDLER FOR NOT FOUND SET no_more_record = 1;#open cur_yb;#WHILE no_more_record != 1 DO#fetch cur_yb into _event_id, _event_coin, _event_rebate;#END WHILE;#close cur_yb;IF _rechargeAmount IS NULL THEN SET _rechargeAmount=0;END IF;IF _coin IS NULL THEN SET _coin=0;END IF;IF _fcoin IS NULL THEN SET _fcoin=0;END IF; IF _status IS NULL THEN SET _status=0;END IF;IF(_status&gt;0)THEN UPDATE blast_member_recharge SET rechargeAmount = _rechargeAmount, state = 1, info = '自动充值', rechargeTime = currentTime, actionIP = _actionIP, coin = _coin, fcoin = _fcoin WHERE `id` = _member_recharge_id; SELECT ROW_COUNT() INTO update_count; IF(update_count&gt;0)THEN call setCoin(_rechargeAmount, 0, _userid, 1, 0, '充值', _member_recharge_id, _rechargeId, '');//此处为另一个存储过程 #IF(_rechargeAmount &gt;= _event_coin AND _event_coin &gt;0 )THEN #UPDATE blast_members SET coin = coin + _event_rebate, rebate_sum = rebate_sum + _event_rebate WHERE `uid` = _userid; #SELECT ROW_COUNT() INTO update_members; #IF(update_members&gt;0)THEN #SELECT coin INTO _user_coin FROM blast_members WHERE `uid` = _userid; #SET @info_str = CONCAT('充值',_rechargeAmount,'元赠送',_event_rebate,'元'); #INSERT INTO blast_coin_log(rebate, userCoin, uid, liqType, actionTime, info, extfield0, extfield1, extfield2) VALUES(_event_rebate, _user_coin, _userid, 151, currentTime, @info_str, _member_recharge_id, _rechargeId, _event_id); #END IF; #END IF; UPDATE blast_members SET deposit_sum = deposit_sum + _rechargeAmount, deposit_count = deposit_count + 1 WHERE `uid` = _userid ; INSERT INTO blast_admin_log(type, actionTime, actionIP, action, extfield0, extfield1) VALUES(2, currentTime, _actionIP, _rechargeId, _userid, _username); END IF;END IF;end//以下为传入存储过程的相应参数:_member_recharge_id int, _userid int, _rechargeAmount float, _rechargeTime int, _rechargeId int, _actionIP varchar(20) character set utf8, _coin float, _fcoin float, _username varchar(255) character set utf8, _status int]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ftp]]></title>
    <url>%2F2019%2F01%2F02%2Fftp%2F</url>
    <content type="text"><![CDATA[首先查看是否有安装vsftpd 1rpm -qa | grep vsftpd 没有就安装并开机启动 12yum -y install vsftpdchkconfig vsftpd on 因为ftp用户不必每个都是系统的真实用户所以采用虚拟用户配置ftp修改配置文件,打开/etc/vsftpd/vsftpd.conf,配置如下: 123456anonymous_enable=NO //设定不允许匿名访问local_enable=YES //设定本地用户可以访问。注：如使用虚拟宿主用户，在该项目设定为NO的情况下所有虚拟用户将无法访问chroot_list_enable=YES //使用户不能离开主目录ascii_upload_enable=YESascii_download_enable=YES //设定支持ASCII模式的上传和下载功能pam_service_name=vsftpd //PAM认证文件名。PAM将根据/etc/pam.d/vsftpd进行认证 下面设置是vsftpd虚拟用户重要配置 123guest_enable=YES //设定启用虚拟用户功能(手动添加,默认不包含这些设定)guest_username=ftp //指定虚拟用户的宿主用户，CentOS中已经有内置的ftp用户了(手动添加,默认不包含这些设定)user_config_dir=/etc/vsftpd/vuser_conf //设定虚拟用户个人vsftp的CentOS FTP服务文件存放路径。存放虚拟用户个性的CentOS FTP服务文件(配置文件名=虚拟用户名)(手动添加,默认不包含这些设定) 认证安装Berkeley DB包 1yum install db4 db4-utils 再创建用户信息文件/etc/vsftpd/vuser_passwd.txt,奇数行用户名,偶数行密码 1234curry123456curry30wzx123 生成虚拟用户认证的db文件(此步骤很关键,以后每次在/etc/vsftpd/vuser_passwd.txt新配置一个用户,都有再生成一遍db文件) 1db_load -T -t hash -f /etc/vsftpd/vuser_passwd.txt /etc/vsftpd/vuser_passwd.db 随后，编辑认证文件/etc/pam.d/vsftpd，全部注释掉原来语句，新增下面配置 12auth required pam_userdb.so db=/etc/vsftpd/vuser_passwdaccount required pam_userdb.so db=/etc/vsftpd/vuser_passwd 最后，创建虚拟用户配置文件 12mkdir /etc/vsftpd/vuser_conf/vi /etc/vsftpd/vuser_conf/curry30 //文件名等于vuser_passwd.txt里面的账户名，否则下面设置无效 内容如下,要注意所有配置的文件都不要有空格,不然怎么都会连不上的。。。而且找不到原因，那是相当蛋疼的。。。 1234567local_root=/homewrite_enable=YESanon_umask=022anon_world_readable_only=NOanon_upload_enable=YESanon_mkdir_write_enable=YESanon_other_write_enable=YES 设置Selinux 12setsebool -P ftp_home_dir=1 //设置ftp可以使用home目录sersebool -P allow_ftpd_full_access=1 //设置ftp用户可以有所有权限 设置curry30根目录权限 1chmod R 777 /home //因为我的网站根目录在home下 有可能进行防火墙的设置 打开21端口 vim/etc/sysconfig/iptables 1-A INPUT -m state --state NEW -m tcp -p -dport 21 -j ACCEPT 重启防火墙 1service iptables restart 重启vsftpd生效 1service vsftpd restart]]></content>
      <tags>
        <tag>ftp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ratchet]]></title>
    <url>%2F2018%2F12%2F23%2Fratchet%2F</url>
    <content type="text"><![CDATA[首先在本地搭建好chat_client,chat_server, chat_website 然后因为mysql5.7以上date类型不再支持0000-00-00的格式,所以在执行导入sql文件后,进入msql控制台,执行如下语句 1set GLOBAL sql_mode =''; 为了方便调试可以在chat_website上进行相应的调试 如果本地测试需要直接回复信息,可去掉发信息的条件限制,在 chatserver/app/models/ChatUser.php的canSendMessage方法中直接返回 1return true; 在chat_website上本地测试 (1)更改chat_website/index.php 约131行: 1echo "&lt;script&gt;location.href = '/';&lt;/script&gt;" (2)注释chat_website/index.php 约65,66行 并且复制一条新的chatJsUrl 更换成自己本地搭建chatclient的虚拟域名地址如下: 1var chatJsUrl = "http://chatsmall.com/js/"; //curry (3)更改chat_client端代码chat_small/js/client.chat.main.js 18,19行注释掉 并去掉21,22行的注释,也就是将serverclient的本机虚拟域名替换,并且为了纠正路径问题,要去掉该文件中所有的chat_client路径 1var chatIP = "chatsmall.com"; // Test 1var chatUrl = "http://" + chatIP; // Test (4)更改chat_client端代码chat_small/index.php并且修改242行的chatIP为自己本机ip并且修改244行apiUrl为自己本地的chatserver的虚拟域名 1var chatIP = "127.0.0.1"; // Test 1var apiUrl = "http://chatserver.com"; // Test (5)更改chat_client端代码chat_small/js/scripts.js的115行注释掉 并且取消116行的注释 1//webSocket = new WebSocket("wss://" + chatIP + "/wss"); // Live 1webSocket = new WebSocket("ws://" + chatIP + ":" + port); // Test 在安装成功之后,启动服务端的时候会有如下报错: 1stream_set_blocking() expects parameter 1 to be resource, null given 解决方法就是修改php.ini的参数,找到disable_functions = 将proc_open 和stream_socket_server 两个参数删除,然后重启php]]></content>
      <tags>
        <tag>websockets</tag>
      </tags>
  </entry>
</search>
